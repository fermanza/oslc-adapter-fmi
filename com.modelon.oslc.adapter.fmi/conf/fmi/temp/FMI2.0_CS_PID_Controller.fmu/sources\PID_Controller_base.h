#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include <jmi.h>
#include <jmi_block_residual.h>
#include "jmi_log.h"
#include "ModelicaUtilities.h"
#include "ModelicaStandardTables.h"

extern void dgemm_(char* TRANSA, char* TRANSB, int* M, int* N, int* K, double* ALPHA, double* A, int* LDA, double* B, int* LDB, double* BETA, double* C, int* LDC);

int model_ode_derivatives(jmi_t* jmi);
int model_ode_initialize(jmi_t* jmi);
int model_dae_R(jmi_t* jmi, jmi_real_t** res);
int model_init_R0(jmi_t* jmi, jmi_real_t** res);
void model_add_blocks(jmi_t** jmi);
void model_init_add_blocks(jmi_t** jmi);
int model_init_eval_parameters(jmi_t* jmi);
int jmi_set_start_values(jmi_t* jmi);
int model_ode_guards(jmi_t* jmi);
int model_ode_guards_init(jmi_t* jmi);


#define _PI_unitTime_18 ((*(jmi->z))[jmi->offs_real_ci+0])
#define _torque_phi_support_59 ((*(jmi->z))[jmi->offs_real_ci+1])
#define _speedSensor_flange_tau_101 ((*(jmi->z))[jmi->offs_real_ci+2])
#define _loadTorque_phi_support_105 ((*(jmi->z))[jmi->offs_real_ci+3])
#define _driveAngle_0 ((*(jmi->z))[jmi->offs_real_pi+0])
#define _PI_k_3 ((*(jmi->z))[jmi->offs_real_pi+1])
#define _PI_Ti_4 ((*(jmi->z))[jmi->offs_real_pi+2])
#define _PI_Td_5 ((*(jmi->z))[jmi->offs_real_pi+3])
#define _PI_wp_8 ((*(jmi->z))[jmi->offs_real_pi+4])
#define _PI_wd_9 ((*(jmi->z))[jmi->offs_real_pi+5])
#define _PI_Ni_10 ((*(jmi->z))[jmi->offs_real_pi+6])
#define _PI_Nd_11 ((*(jmi->z))[jmi->offs_real_pi+7])
#define _PI_xi_start_14 ((*(jmi->z))[jmi->offs_real_pi+8])
#define _PI_xd_start_15 ((*(jmi->z))[jmi->offs_real_pi+9])
#define _PI_addP_k2_20 ((*(jmi->z))[jmi->offs_real_pi+10])
#define _PI_P_k_21 ((*(jmi->z))[jmi->offs_real_pi+11])
#define _PI_addPID_k1_30 ((*(jmi->z))[jmi->offs_real_pi+12])
#define _PI_addPID_k2_31 ((*(jmi->z))[jmi->offs_real_pi+13])
#define _PI_addPID_k3_32 ((*(jmi->z))[jmi->offs_real_pi+14])
#define _PI_addI_k1_34 ((*(jmi->z))[jmi->offs_real_pi+15])
#define _PI_addI_k2_35 ((*(jmi->z))[jmi->offs_real_pi+16])
#define _PI_addI_k3_36 ((*(jmi->z))[jmi->offs_real_pi+17])
#define _PI_addSat_k1_38 ((*(jmi->z))[jmi->offs_real_pi+18])
#define _PI_addSat_k2_39 ((*(jmi->z))[jmi->offs_real_pi+19])
#define _PI_limiter_uMax_43 ((*(jmi->z))[jmi->offs_real_pi+20])
#define _PI_limiter_uMin_44 ((*(jmi->z))[jmi->offs_real_pi+21])
#define _PI_Dzero_k_49 ((*(jmi->z))[jmi->offs_real_pi+22])
#define _inertia1_J_52 ((*(jmi->z))[jmi->offs_real_pi+23])
#define _spring_c_60 ((*(jmi->z))[jmi->offs_real_pi+24])
#define _spring_d_61 ((*(jmi->z))[jmi->offs_real_pi+25])
#define _spring_phi_rel0_62 ((*(jmi->z))[jmi->offs_real_pi+26])
#define _spring_phi_nominal_69 ((*(jmi->z))[jmi->offs_real_pi+27])
#define _inertia2_J_73 ((*(jmi->z))[jmi->offs_real_pi+28])
#define _kinematicPTP_qd_max_1_79 ((*(jmi->z))[jmi->offs_real_pi+29])
#define _kinematicPTP_qdd_max_1_80 ((*(jmi->z))[jmi->offs_real_pi+30])
#define _kinematicPTP_startTime_81 ((*(jmi->z))[jmi->offs_real_pi+31])
#define _integrator_k_96 ((*(jmi->z))[jmi->offs_real_pi+32])
#define _integrator_y_start_98 ((*(jmi->z))[jmi->offs_real_pi+33])
#define _loadTorque_tau_constant_102 ((*(jmi->z))[jmi->offs_real_pi+34])
#define __block_jacobian_check_tol_122 ((*(jmi->z))[jmi->offs_real_pi+35])
#define __cs_rel_tol_124 ((*(jmi->z))[jmi->offs_real_pi+36])
#define __cs_step_size_126 ((*(jmi->z))[jmi->offs_real_pi+37])
#define __events_default_tol_128 ((*(jmi->z))[jmi->offs_real_pi+38])
#define __events_tol_factor_129 ((*(jmi->z))[jmi->offs_real_pi+39])
#define __nle_solver_default_tol_133 ((*(jmi->z))[jmi->offs_real_pi+40])
#define __nle_solver_max_residual_scaling_factor_135 ((*(jmi->z))[jmi->offs_real_pi+41])
#define __nle_solver_min_residual_scaling_factor_136 ((*(jmi->z))[jmi->offs_real_pi+42])
#define __nle_solver_min_tol_137 ((*(jmi->z))[jmi->offs_real_pi+43])
#define __nle_solver_regularization_tolerance_138 ((*(jmi->z))[jmi->offs_real_pi+44])
#define __nle_solver_step_limit_factor_139 ((*(jmi->z))[jmi->offs_real_pi+45])
#define __nle_solver_tol_factor_140 ((*(jmi->z))[jmi->offs_real_pi+46])
#define _PI_yMax_6 ((*(jmi->z))[jmi->offs_real_pi+47])
#define _PI_yMin_7 ((*(jmi->z))[jmi->offs_real_pi+48])
#define _PI_y_start_16 ((*(jmi->z))[jmi->offs_real_pi+49])
#define _PI_addP_k1_19 ((*(jmi->z))[jmi->offs_real_pd+0])
#define _PI_I_k_24 ((*(jmi->z))[jmi->offs_real_pd+1])
#define _PI_I_y_start_26 ((*(jmi->z))[jmi->offs_real_pd+2])
#define _PI_gainPID_k_29 ((*(jmi->z))[jmi->offs_real_pd+3])
#define _PI_gainTrack_k_42 ((*(jmi->z))[jmi->offs_real_pd+4])
#define _kinematicPTP_deltaq_1_50 ((*(jmi->z))[jmi->offs_real_pd+5])
#define _kinematicPTP_p_qd_max_1_78 ((*(jmi->z))[jmi->offs_real_pd+6])
#define _kinematicPTP_p_qdd_max_1_82 ((*(jmi->z))[jmi->offs_real_pd+7])
#define _PI_Dzero_y_83 ((*(jmi->z))[jmi->offs_real_pd+8])
#define _loadTorque_tau_84 ((*(jmi->z))[jmi->offs_real_pd+9])
#define _kinematicPTP_p_deltaq_1_85 ((*(jmi->z))[jmi->offs_real_pd+10])
#define _PI_addPID_u2_86 ((*(jmi->z))[jmi->offs_real_pd+11])
#define _loadTorque_flange_tau_88 ((*(jmi->z))[jmi->offs_real_pd+12])
#define _inertia2_flange_b_tau_89 ((*(jmi->z))[jmi->offs_real_pd+13])
#define _kinematicPTP_aux1_1_90 ((*(jmi->z))[jmi->offs_real_pd+14])
#define _kinematicPTP_aux2_1_91 ((*(jmi->z))[jmi->offs_real_pd+15])
#define _kinematicPTP_sd_max_92 ((*(jmi->z))[jmi->offs_real_pd+16])
#define _kinematicPTP_sdd_max_93 ((*(jmi->z))[jmi->offs_real_pd+17])
#define _kinematicPTP_Ta1_94 ((*(jmi->z))[jmi->offs_real_pd+18])
#define _kinematicPTP_Ta2_103 ((*(jmi->z))[jmi->offs_real_pd+19])
#define _kinematicPTP_Tv_107 ((*(jmi->z))[jmi->offs_real_pd+20])
#define _kinematicPTP_Te_108 ((*(jmi->z))[jmi->offs_real_pd+21])
#define __block_solver_experimental_mode_123 ((*(jmi->z))[jmi->offs_integer_pi+0])
#define __cs_solver_125 ((*(jmi->z))[jmi->offs_integer_pi+1])
#define __iteration_variable_scaling_130 ((*(jmi->z))[jmi->offs_integer_pi+2])
#define __log_level_131 ((*(jmi->z))[jmi->offs_integer_pi+3])
#define __nle_solver_max_iter_134 ((*(jmi->z))[jmi->offs_integer_pi+4])
#define __residual_equation_scaling_143 ((*(jmi->z))[jmi->offs_integer_pi+5])
#define _inertia1_stateSelect_53 ((*(jmi->z))[jmi->offs_integer_pi+6])
#define _spring_stateSelect_70 ((*(jmi->z))[jmi->offs_integer_pi+7])
#define _inertia2_stateSelect_74 ((*(jmi->z))[jmi->offs_integer_pi+8])
#define _kinematicPTP_nout_95 ((*(jmi->z))[jmi->offs_integer_pi+9])
#define _PI_controllerType_2 ((*(jmi->z))[jmi->offs_integer_pi+10])
#define _PI_initType_12 ((*(jmi->z))[jmi->offs_integer_pi+11])
#define _PI_I_initType_25 ((*(jmi->z))[jmi->offs_integer_pi+12])
#define _integrator_initType_97 ((*(jmi->z))[jmi->offs_integer_pi+13])
#define __block_jacobian_check_121 ((*(jmi->z))[jmi->offs_boolean_pi+0])
#define __enforce_bounds_127 ((*(jmi->z))[jmi->offs_boolean_pi+1])
#define __nle_solver_check_jac_cond_132 ((*(jmi->z))[jmi->offs_boolean_pi+2])
#define __rescale_after_singular_jac_141 ((*(jmi->z))[jmi->offs_boolean_pi+3])
#define __rescale_each_step_142 ((*(jmi->z))[jmi->offs_boolean_pi+4])
#define __runtime_log_to_file_144 ((*(jmi->z))[jmi->offs_boolean_pi+5])
#define __use_Brent_in_1d_145 ((*(jmi->z))[jmi->offs_boolean_pi+6])
#define __use_jacobian_equilibration_146 ((*(jmi->z))[jmi->offs_boolean_pi+7])
#define __use_newton_for_brent_147 ((*(jmi->z))[jmi->offs_boolean_pi+8])
#define _PI_limitsAtInit_13 ((*(jmi->z))[jmi->offs_boolean_pi+9])
#define _PI_strict_17 ((*(jmi->z))[jmi->offs_boolean_pi+10])
#define _PI_limiter_strict_45 ((*(jmi->z))[jmi->offs_boolean_pi+11])
#define _PI_limiter_limitsAtInit_46 ((*(jmi->z))[jmi->offs_boolean_pi+12])
#define _PI_with_I_47 ((*(jmi->z))[jmi->offs_boolean_pi+13])
#define _PI_with_D_48 ((*(jmi->z))[jmi->offs_boolean_pi+14])
#define _torque_useSupport_58 ((*(jmi->z))[jmi->offs_boolean_pi+15])
#define _spring_useHeatPort_71 ((*(jmi->z))[jmi->offs_boolean_pi+16])
#define _loadTorque_useSupport_104 ((*(jmi->z))[jmi->offs_boolean_pi+17])
#define _kinematicPTP_noWphase_106 ((*(jmi->z))[jmi->offs_boolean_pd+0])
#define _der_spring_w_rel_115 ((*(jmi->z))[jmi->offs_real_dx+0])
#define _der_PI_I_y_116 ((*(jmi->z))[jmi->offs_real_dx+1])
#define _der_inertia1_phi_117 ((*(jmi->z))[jmi->offs_real_dx+2])
#define _der_spring_phi_rel_118 ((*(jmi->z))[jmi->offs_real_dx+3])
#define _der_integrator_y_119 ((*(jmi->z))[jmi->offs_real_dx+4])
#define _der_inertia1__der_phi_120 ((*(jmi->z))[jmi->offs_real_dx+5])
#define _spring_w_rel_66 ((*(jmi->z))[jmi->offs_real_x+0])
#define _PI_I_y_28 ((*(jmi->z))[jmi->offs_real_x+1])
#define _inertia1_phi_54 ((*(jmi->z))[jmi->offs_real_x+2])
#define _spring_phi_rel_65 ((*(jmi->z))[jmi->offs_real_x+3])
#define _integrator_y_100 ((*(jmi->z))[jmi->offs_real_x+4])
#define _inertia1__der_phi_112 ((*(jmi->z))[jmi->offs_real_x+5])
#define _PI_controlError_1 ((*(jmi->z))[jmi->offs_real_w+0])
#define _PI_P_u_22 ((*(jmi->z))[jmi->offs_real_w+1])
#define _PI_P_y_23 ((*(jmi->z))[jmi->offs_real_w+2])
#define _PI_I_u_27 ((*(jmi->z))[jmi->offs_real_w+3])
#define _PI_addPID_y_33 ((*(jmi->z))[jmi->offs_real_w+4])
#define _PI_addI_u3_37 ((*(jmi->z))[jmi->offs_real_w+5])
#define _PI_addSat_u2_40 ((*(jmi->z))[jmi->offs_real_w+6])
#define _PI_addSat_y_41 ((*(jmi->z))[jmi->offs_real_w+7])
#define _PI_u_m_51 ((*(jmi->z))[jmi->offs_real_w+8])
#define _inertia1_w_55 ((*(jmi->z))[jmi->offs_real_w+9])
#define _inertia1_a_56 ((*(jmi->z))[jmi->offs_real_w+10])
#define _torque_tau_57 ((*(jmi->z))[jmi->offs_real_w+11])
#define _spring_tau_c_63 ((*(jmi->z))[jmi->offs_real_w+12])
#define _spring_tau_d_64 ((*(jmi->z))[jmi->offs_real_w+13])
#define _spring_a_rel_67 ((*(jmi->z))[jmi->offs_real_w+14])
#define _spring_tau_68 ((*(jmi->z))[jmi->offs_real_w+15])
#define _spring_lossPower_72 ((*(jmi->z))[jmi->offs_real_w+16])
#define _inertia2_phi_75 ((*(jmi->z))[jmi->offs_real_w+17])
#define _inertia2_w_76 ((*(jmi->z))[jmi->offs_real_w+18])
#define _inertia2_a_77 ((*(jmi->z))[jmi->offs_real_w+19])
#define _kinematicPTP_sdd_87 ((*(jmi->z))[jmi->offs_real_w+20])
#define _integrator_u_99 ((*(jmi->z))[jmi->offs_real_w+21])
#define _der_inertia1_w_109 ((*(jmi->z))[jmi->offs_real_w+22])
#define _der_inertia2_phi_110 ((*(jmi->z))[jmi->offs_real_w+23])
#define _der_inertia2_w_111 ((*(jmi->z))[jmi->offs_real_w+24])
#define _der_2_spring_phi_rel_113 ((*(jmi->z))[jmi->offs_real_w+25])
#define _der_2_inertia2_phi_114 ((*(jmi->z))[jmi->offs_real_w+26])
#define _time ((*(jmi->z))[jmi->offs_t])
#define pre_der_spring_w_rel_115 ((*(jmi->z))[jmi->offs_pre_real_dx+0])
#define pre_der_PI_I_y_116 ((*(jmi->z))[jmi->offs_pre_real_dx+1])
#define pre_der_inertia1_phi_117 ((*(jmi->z))[jmi->offs_pre_real_dx+2])
#define pre_der_spring_phi_rel_118 ((*(jmi->z))[jmi->offs_pre_real_dx+3])
#define pre_der_integrator_y_119 ((*(jmi->z))[jmi->offs_pre_real_dx+4])
#define pre_der_inertia1__der_phi_120 ((*(jmi->z))[jmi->offs_pre_real_dx+5])
#define pre_spring_w_rel_66 ((*(jmi->z))[jmi->offs_pre_real_x+0])
#define pre_PI_I_y_28 ((*(jmi->z))[jmi->offs_pre_real_x+1])
#define pre_inertia1_phi_54 ((*(jmi->z))[jmi->offs_pre_real_x+2])
#define pre_spring_phi_rel_65 ((*(jmi->z))[jmi->offs_pre_real_x+3])
#define pre_integrator_y_100 ((*(jmi->z))[jmi->offs_pre_real_x+4])
#define pre_inertia1__der_phi_112 ((*(jmi->z))[jmi->offs_pre_real_x+5])
#define pre_PI_controlError_1 ((*(jmi->z))[jmi->offs_pre_real_w+0])
#define pre_PI_P_u_22 ((*(jmi->z))[jmi->offs_pre_real_w+1])
#define pre_PI_P_y_23 ((*(jmi->z))[jmi->offs_pre_real_w+2])
#define pre_PI_I_u_27 ((*(jmi->z))[jmi->offs_pre_real_w+3])
#define pre_PI_addPID_y_33 ((*(jmi->z))[jmi->offs_pre_real_w+4])
#define pre_PI_addI_u3_37 ((*(jmi->z))[jmi->offs_pre_real_w+5])
#define pre_PI_addSat_u2_40 ((*(jmi->z))[jmi->offs_pre_real_w+6])
#define pre_PI_addSat_y_41 ((*(jmi->z))[jmi->offs_pre_real_w+7])
#define pre_PI_u_m_51 ((*(jmi->z))[jmi->offs_pre_real_w+8])
#define pre_inertia1_w_55 ((*(jmi->z))[jmi->offs_pre_real_w+9])
#define pre_inertia1_a_56 ((*(jmi->z))[jmi->offs_pre_real_w+10])
#define pre_torque_tau_57 ((*(jmi->z))[jmi->offs_pre_real_w+11])
#define pre_spring_tau_c_63 ((*(jmi->z))[jmi->offs_pre_real_w+12])
#define pre_spring_tau_d_64 ((*(jmi->z))[jmi->offs_pre_real_w+13])
#define pre_spring_a_rel_67 ((*(jmi->z))[jmi->offs_pre_real_w+14])
#define pre_spring_tau_68 ((*(jmi->z))[jmi->offs_pre_real_w+15])
#define pre_spring_lossPower_72 ((*(jmi->z))[jmi->offs_pre_real_w+16])
#define pre_inertia2_phi_75 ((*(jmi->z))[jmi->offs_pre_real_w+17])
#define pre_inertia2_w_76 ((*(jmi->z))[jmi->offs_pre_real_w+18])
#define pre_inertia2_a_77 ((*(jmi->z))[jmi->offs_pre_real_w+19])
#define pre_kinematicPTP_sdd_87 ((*(jmi->z))[jmi->offs_pre_real_w+20])
#define pre_integrator_u_99 ((*(jmi->z))[jmi->offs_pre_real_w+21])
#define pre_der_inertia1_w_109 ((*(jmi->z))[jmi->offs_pre_real_w+22])
#define pre_der_inertia2_phi_110 ((*(jmi->z))[jmi->offs_pre_real_w+23])
#define pre_der_inertia2_w_111 ((*(jmi->z))[jmi->offs_pre_real_w+24])
#define pre_der_2_spring_phi_rel_113 ((*(jmi->z))[jmi->offs_pre_real_w+25])
#define pre_der_2_inertia2_phi_114 ((*(jmi->z))[jmi->offs_pre_real_w+26])


#define sf(i) (jmi->variable_scaling_factors[i])

#define _real_ci(i) ((*(jmi->z))[jmi->offs_real_ci+i])
#define _real_cd(i) ((*(jmi->z))[jmi->offs_real_cd+i])
#define _real_pi(i) ((*(jmi->z))[jmi->offs_real_pi+i])
#define _real_pd(i) ((*(jmi->z))[jmi->offs_real_pd+i])
#define _real_dx(i) ((*(jmi->z))[jmi->offs_real_dx+i])
#define _real_x(i) ((*(jmi->z))[jmi->offs_real_x+i])
#define _real_u(i) ((*(jmi->z))[jmi->offs_real_u+i])
#define _real_w(i) ((*(jmi->z))[jmi->offs_real_w+i])
#define _t ((*(jmi->z))[jmi->offs_t])

#define _real_d(i) ((*(jmi->z))[jmi->offs_real_d+i])
#define _integer_d(i) ((*(jmi->z))[jmi->offs_integer_d+i])
#define _integer_u(i) ((*(jmi->z))[jmi->offs_integer_u+i])
#define _boolean_d(i) ((*(jmi->z))[jmi->offs_boolean_d+i])
#define _boolean_u(i) ((*(jmi->z))[jmi->offs_boolean_u+i])

#define _pre_real_dx(i) ((*(jmi->z))[jmi->offs_pre_real_dx+i])
#define _pre_real_x(i) ((*(jmi->z))[jmi->offs_pre_real_x+i])
#define _pre_real_u(i) ((*(jmi->z))[jmi->offs_pre_real_u+i])
#define _pre_real_w(i) ((*(jmi->z))[jmi->offs_pre_real_w+i])

#define _pre_real_d(i) ((*(jmi->z))[jmi->offs_pre_real_d+i])
#define _pre_integer_d(i) ((*(jmi->z))[jmi->offs_pre_integer_d+i])
#define _pre_integer_u(i) ((*(jmi->z))[jmi->offs_pre_integer_u+i])
#define _pre_boolean_d(i) ((*(jmi->z))[jmi->offs_pre_boolean_d+i])
#define _pre_boolean_u(i) ((*(jmi->z))[jmi->offs_pre_boolean_u+i])

#define _sw(i) ((*(jmi->z))[jmi->offs_sw + i])
#define _sw_init(i) ((*(jmi->z))[jmi->offs_sw_init + i])
#define _pre_sw(i) ((*(jmi->z))[jmi->offs_pre_sw + i])
#define _pre_sw_init(i) ((*(jmi->z))[jmi->offs_pre_sw_init + i])
#define _guards(i) ((*(jmi->z))[jmi->offs_guards + i])
#define _guards_init(i) ((*(jmi->z))[jmi->offs_guards_init + i])
#define _pre_guards(i) ((*(jmi->z))[jmi->offs_pre_guards + i])
#define _pre_guards_init(i) ((*(jmi->z))[jmi->offs_pre_guards_init + i])

#define _atInitial (jmi->atInitial)







